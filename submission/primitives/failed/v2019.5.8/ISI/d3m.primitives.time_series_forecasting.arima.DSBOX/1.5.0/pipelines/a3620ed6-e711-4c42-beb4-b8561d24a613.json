{
    "id":"a3620ed6-e711-4c42-beb4-b8561d24a613",
    "schema":"https://metadata.datadrivendiscovery.org/schemas/v0/pipeline.json",
    "created":"2019-05-14T22:30:32.284982Z",
    "context":"PRETRAINING",
    "inputs":[
        {
            "name":"input dataset"
        }
    ],
    "outputs":[
        {
            "data":"steps.7.produce",
            "name":"predictions of input dataset"
        }
    ],
    "steps":[
        {
            "type":"PRIMITIVE",
            "primitive":{
                "id":"f31f8c1f-d1c5-43e5-a4b2-2ae4a761ef2e",
                "version":"0.2.0",
                "python_path":"d3m.primitives.data_transformation.denormalize.Common",
                "name":"Denormalize datasets",
                "digest":"343f89680dc150a0d210c775fad2a32db8b7d422434f79e818a27a8f479359f8"
            },
            "arguments":{
                "inputs":{
                    "type":"CONTAINER",
                    "data":"inputs.0"
                }
            },
            "outputs":[
                {
                    "id":"produce"
                }
            ],
            "hyperparams":{
                "starting_resource":{
                    "type":"VALUE",
                    "data":null
                },
                "recursive":{
                    "type":"VALUE",
                    "data":true
                },
                "many_to_many":{
                    "type":"VALUE",
                    "data":false
                },
                "discard_not_joined_tabular_resources":{
                    "type":"VALUE",
                    "data":false
                }
            }
        },
        {
            "type":"PRIMITIVE",
            "primitive":{
                "id":"dsbox-denormalize(from d3m)",
                "version":"1.5.0",
                "python_path":"d3m.primitives.normalization.denormalize.DSBOX",
                "name":"DSBox denormalize",
                "digest":"3ec02ddfdcefee3d22056e55ac1ef5c7af9225f8a6e142afff6c4f7916355cbf"
            },
            "arguments":{
                "inputs":{
                    "type":"CONTAINER",
                    "data":"steps.0.produce"
                }
            },
            "outputs":[
                {
                    "id":"produce"
                }
            ]
        },
        {
            "type":"PRIMITIVE",
            "primitive":{
                "id":"4b42ce1e-9b98-4a25-b68e-fad13311eb65",
                "version":"0.3.0",
                "python_path":"d3m.primitives.data_transformation.dataset_to_dataframe.Common",
                "name":"Extract a DataFrame from a Dataset",
                "digest":"e961af90b7d82dcc4900a01fc4bc0cf76c8ca050086cedc9ff043814d770fbb2"
            },
            "arguments":{
                "inputs":{
                    "type":"CONTAINER",
                    "data":"steps.1.produce"
                }
            },
            "outputs":[
                {
                    "id":"produce"
                }
            ]
        },
        {
            "type":"PRIMITIVE",
            "primitive":{
                "id":"4503a4c6-42f7-45a1-a1d4-ed69699cf5e1",
                "version":"0.2.0",
                "python_path":"d3m.primitives.data_transformation.extract_columns_by_semantic_types.DataFrameCommon",
                "name":"Extracts columns by semantic type",
                "digest":"7c7ca2febf05d3138438919635143b6ba2b15606400442ddcf1c7107fa7e8207"
            },
            "arguments":{
                "inputs":{
                    "type":"CONTAINER",
                    "data":"steps.2.produce"
                }
            },
            "outputs":[
                {
                    "id":"produce"
                }
            ],
            "hyperparams":{
                "semantic_types":{
                    "type":"VALUE",
                    "data":[
                        "https://metadata.datadrivendiscovery.org/types/TrueTarget"
                    ]
                }
            }
        },
        {
            "type":"PRIMITIVE",
            "primitive":{
                "id":"7ddf2fd8-2f7f-4e53-96a7-0d9f5aeecf93",
                "version":"1.5.0",
                "python_path":"d3m.primitives.data_transformation.to_numeric.DSBOX",
                "name":"ISI DSBox To Numeric DataFrame",
                "digest":"b2cf9916393545363619f61958d4a5cf62834aed30beb65cf308810f3f54f452"
            },
            "arguments":{
                "inputs":{
                    "type":"CONTAINER",
                    "data":"steps.3.produce"
                }
            },
            "outputs":[
                {
                    "id":"produce"
                }
            ],
            "hyperparams":{
                "drop_non_numeric_columns":{
                    "type":"VALUE",
                    "data":false
                }
            }
        },
        {
            "type":"PRIMITIVE",
            "primitive":{
                "id":"4503a4c6-42f7-45a1-a1d4-ed69699cf5e1",
                "version":"0.2.0",
                "python_path":"d3m.primitives.data_transformation.extract_columns_by_semantic_types.DataFrameCommon",
                "name":"Extracts columns by semantic type",
                "digest":"7c7ca2febf05d3138438919635143b6ba2b15606400442ddcf1c7107fa7e8207"
            },
            "arguments":{
                "inputs":{
                    "type":"CONTAINER",
                    "data":"steps.2.produce"
                }
            },
            "outputs":[
                {
                    "id":"produce"
                }
            ],
            "hyperparams":{
                "semantic_types":{
                    "type":"VALUE",
                    "data":[
                        "https://metadata.datadrivendiscovery.org/types/PrimaryKey",
                        "https://metadata.datadrivendiscovery.org/types/Attribute"
                    ]
                }
            }
        },
        {
            "type":"PRIMITIVE",
            "primitive":{
                "id":"7ddf2fd8-2f7f-4e53-96a7-0d9f5aeecf93",
                "version":"1.5.0",
                "python_path":"d3m.primitives.data_transformation.to_numeric.DSBOX",
                "name":"ISI DSBox To Numeric DataFrame",
                "digest":"b2cf9916393545363619f61958d4a5cf62834aed30beb65cf308810f3f54f452"
            },
            "arguments":{
                "inputs":{
                    "type":"CONTAINER",
                    "data":"steps.5.produce"
                }
            },
            "outputs":[
                {
                    "id":"produce"
                }
            ]
        },
        {
            "type":"PRIMITIVE",
            "primitive":{
                "id":"b2e4e8ea-76dc-439e-8e46-b377bf616a35",
                "version":"1.5.0",
                "python_path":"d3m.primitives.time_series_forecasting.arima.DSBOX",
                "name":"DSBox Arima Primitive",
                "digest":"817b33386a5a20fbe8336bb7907714ac3e64880ccdc865803f5fa52e8a813c6f"
            },
            "arguments":{
                "inputs":{
                    "type":"CONTAINER",
                    "data":"steps.6.produce"
                },
                "outputs":{
                    "type":"CONTAINER",
                    "data":"steps.4.produce"
                }
            },
            "outputs":[
                {
                    "id":"produce"
                }
            ],
            "hyperparams":{
                "take_log":{
                    "type":"VALUE",
                    "data":false
                },
                "auto":{
                    "type":"VALUE",
                    "data":true
                }
            }
        }
    ],
    "name":"ARIMA_Template:4979572384",
    "description":"",
    "digest":"57eaaa14c316a0480f94c4c19d7f40fbfcfd56ddb4b26e3289c4ccdb07502d1d",
    "pipeline_rank":1423.636490967907,
    "metric":"rootMeanSquaredError",
    "metric_value":1423.636490967907,
    "template_name":"ARIMA_Template",
    "template_task":"TIME_SERIES_FORECASTING",
    "template_subtask":"NONE",
    "problem_taskType":"timeSeriesForecasting",
    "problem_taskSubType":"NONE"
}