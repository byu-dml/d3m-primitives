{
  "id": "5ffa33b8-93ca-45d6-989a-97a5a478c282",
  "schema": "https://metadata.datadrivendiscovery.org/schemas/v0/pipeline.json",
  "created": "2019-04-29T22:51:25.517901Z",
  "context": "TESTING",
  "inputs": [
    {
      "name": "inputs"
    }
  ],
  "outputs": [
    {
      "data": "steps.7.produce",
      "name": "output predictions"
    }
  ],
  "steps": [
    {
      "type": "PRIMITIVE",
      "primitive": {
        "id": "f31f8c1f-d1c5-43e5-a4b2-2ae4a761ef2e",
        "version": "0.2.0",
        "python_path": "d3m.primitives.data_transformation.denormalize.Common",
        "name": "Denormalize datasets"
      },
      "arguments": {
        "inputs": {
          "type": "CONTAINER",
          "data": "inputs.0"
        }
      },
      "outputs": [
        {
          "id": "produce"
        }
      ]
    },
    {
      "type": "PRIMITIVE",
      "primitive": {
        "id": "4b42ce1e-9b98-4a25-b68e-fad13311eb65",
        "version": "0.3.0",
        "python_path": "d3m.primitives.data_transformation.dataset_to_dataframe.Common",
        "name": "Extract a DataFrame from a Dataset"
      },
      "arguments": {
        "inputs": {
          "type": "CONTAINER",
          "data": "steps.0.produce"
        }
      },
      "outputs": [
        {
          "id": "produce"
        }
      ]
    },
    {
      "type": "PRIMITIVE",
      "primitive": {
        "id": "d510cb7a-1782-4f51-b44c-58f0236e47c7",
        "version": "0.5.0",
        "python_path": "d3m.primitives.data_transformation.column_parser.DataFrameCommon",
        "name": "Parses strings into their types"
      },
      "arguments": {
        "inputs": {
          "type": "CONTAINER",
          "data": "steps.1.produce"
        }
      },
      "outputs": [
        {
          "id": "produce"
        }
      ]
    },
    {
      "type": "PRIMITIVE",
      "primitive": {
        "id": "d016df89-de62-3c53-87ed-c06bb6a23cde",
        "version": "2019.4.4",
        "python_path": "d3m.primitives.data_cleaning.imputer.SKlearn",
        "name": "sklearn.impute.SimpleImputer"
      },
      "arguments": {
        "inputs": {
          "type": "CONTAINER",
          "data": "steps.2.produce"
        }
      },
      "outputs": [
        {
          "id": "produce"
        }
      ],
      "hyperparams": {
        "use_semantic_types": {
          "type": "VALUE",
          "data": true
        },
        "return_result": {
          "type": "VALUE",
          "data": "replace"
        }
      }
    },
    {
      "type": "PRIMITIVE",
      "primitive": {
        "id": "0b21fcca-8b35-457d-a65d-36294c6f80a2",
        "version": "0.1.0",
        "python_path": "d3m.primitives.data_preprocessing.text_reader.DataFrameCommon",
        "name": "Columns text reader"
      },
      "arguments": {
        "inputs": {
          "type": "CONTAINER",
          "data": "steps.3.produce"
        }
      },
      "outputs": [
        {
          "id": "produce"
        }
      ],
      "hyperparams": {
        "return_result": {
          "type": "VALUE",
          "data": "replace"
        }
      }
    },
    {
      "type": "PRIMITIVE",
      "primitive": {
        "id": "0609859b-8ed9-397f-ac7a-7c4f63863560",
        "version": "2019.4.4",
        "python_path": "d3m.primitives.data_preprocessing.count_vectorizer.SKlearn",
        "name": "sklearn.feature_extraction.text.CountVectorizer"
      },
      "arguments": {
        "inputs": {
          "type": "CONTAINER",
          "data": "steps.4.produce"
        }
      },
      "outputs": [
        {
          "id": "produce"
        }
      ],
      "hyperparams": {
        "use_semantic_types": {
          "type": "VALUE",
          "data": true
        },
        "return_result": {
          "type": "VALUE",
          "data": "replace"
        }
      }
    },
    {
      "type": "PRIMITIVE",
      "primitive": {
        "id": "1dd82833-5692-39cb-84fb-2455683075f3",
        "version": "2019.4.4",
        "python_path": "d3m.primitives.classification.random_forest.SKlearn",
        "name": "sklearn.ensemble.forest.RandomForestClassifier"
      },
      "arguments": {
        "inputs": {
          "type": "CONTAINER",
          "data": "steps.5.produce"
        },
        "outputs": {
          "type": "CONTAINER",
          "data": "steps.5.produce"
        }
      },
      "outputs": [
        {
          "id": "produce"
        }
      ],
      "hyperparams": {
        "use_semantic_types": {
          "type": "VALUE",
          "data": true
        }
      }
    },
    {
      "type": "PRIMITIVE",
      "primitive": {
        "id": "8d38b340-f83f-4877-baaa-162f8e551736",
        "version": "0.3.0",
        "python_path": "d3m.primitives.data_transformation.construct_predictions.DataFrameCommon",
        "name": "Construct pipeline predictions output"
      },
      "arguments": {
        "inputs": {
          "type": "CONTAINER",
          "data": "steps.6.produce"
        },
        "reference": {
          "type": "CONTAINER",
          "data": "steps.1.produce"
        }
      },
      "outputs": [
        {
          "id": "produce"
        }
      ]
    }
  ]
}